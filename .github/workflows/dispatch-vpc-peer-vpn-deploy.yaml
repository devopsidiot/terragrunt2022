name: Create or Update VPC/Peer/VPN (Dispatch)
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to Deploy to (qa, stg, prd)'
        required: true
#      region:
#        description: 'Region to Deploy to (us-east-1, etc.)'
#        default: "us-east-1"
#        required: true
#     cluster-name:
#        description: 'Cluster to Deploy to'
#        default: "cluster-1"
#        required: true
    
env:
  CI: true
  TF_VERSION: 1.0.0

jobs:
  create-or-update-vpc:
    name: Create or Update VPC
    runs-on: ubuntu-18.04
    steps:
      - name: Git checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.31.0 

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false
          
      - name: AWS Credentials
        id: aws-credentials
        run: |
          mkdir -p ~/.aws
          touch ~/.aws/credentials
          echo "${{secrets.AWS_CREDENTIALS_FILE}}" > ~/.aws/credentials

      - name: Setup SSH Keys and known_hosts
        #  Copied from https://github.com/maddox/actions/blob/master/ssh/entrypoint.sh
        run: |
          SSH_PATH="$HOME/.ssh"
          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"
          echo "${{secrets.ID_RSA}}" > "$SSH_PATH/id_rsa"
          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/id_rsa"
          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_rsa"

      - name: Create or Update VPC
        run: |
          cd ${{github.event.inputs.env}}/vpc
          terragrunt init --terragrunt-non-interactive
          terragrunt plan --terragrunt-non-interactive
          terragrunt apply -auto-approve --terragrunt-non-interactive
      
      - name: Create or Update VPC Peering
        run: |
          cd ${{github.event.inputs.env}}/vpc-peer
          terragrunt init --terragrunt-non-interactive
          terragrunt plan --terragrunt-non-interactive
          terragrunt apply -auto-approve --terragrunt-non-interactive

      - name: Create or Update Client VPN
        run: |
          cd ${{github.event.inputs.env}}/client-vpn
          terragrunt init --terragrunt-non-interactive
          terragrunt plan --terragrunt-non-interactive
          terragrunt apply -auto-approve --terragrunt-non-interactive
